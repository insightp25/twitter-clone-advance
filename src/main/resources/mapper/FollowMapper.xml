<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="clone.twitter.repository.FollowMapper">
  <resultMap id="UserFollowResult" type="clone.twitter.repository.dto.UserFollowDto">
    <association property="user" javaType="User">
      <result column="u_id" property="id"/>
      <result column="u_username" property="username"/>
      <result column="u_email" property="email"/>
      <result column="u_password_hash" property="passwordHash"/>
      <result column="u_profile_name" property="profileName"/>
      <result column="u_birthdate" property="birthdate"/>
      <result column="u_created_at" property="createdAt"/>
      <result column="u_updated_at" property="updatedAt"/>
    </association>
    <association property="follow" javaType="Follow">
      <result column="f_follower_id" property="followerId"/>
      <result column="f_followee_id" property="followeeId"/>
      <result column="f_created_at" property="createdAt"/>
    </association>
  </resultMap>

  <insert id="follow">
    INSERT INTO
      follow (follower_id, followee_id, created_at)
    VALUES
      (#{followerId}, #{followeeId}, #{createdAt})
  </insert>

  <delete id="unfollow">
    DELETE
    FROM
      follow
    WHERE
      follower_id = #{followerId}
      AND followee_id = #{followeeId}
  </delete>

  <select id="findFollowList" resultMap="UserFollowResult">
    SELECT
      u.id as u_id,
      u.username as u_username,
      u.email as u_email,
      u.password_hash as u_password_hash,
      u.profile_name as u_profile_name,
      u.birthdate as u_birthdate,
      u.created_at as u_created_at,
      u.updated_at as u_updated_at,
      f.follower_id as f_follower_id,
      f.followee_id as f_followee_id,
      f.created_at as f_created_at
    FROM
      user u
    JOIN
      follow f
      ON u.id = (
        <choose>
          <when test="followerId != null">
            f.followee_id
          </when>
          <otherwise>
            f.follower_id
          </otherwise>
        </choose>
      )
    WHERE
      (
        <choose>
          <when test="followerId != null">
            f.follower_id = #{followerId}
          </when>
          <otherwise>
            f.followee_id = #{followeeId}
          </otherwise>
        </choose>
      )
      AND f.created_at &lt; COALESCE (#{createdAt}, '2999-12-31')
      AND u.is_inactive = 0
    ORDER BY
      f.created_at DESC
    LIMIT
      #{limit}
  </select>

  <select id="findByIds" resultType="Follow">
    SELECT
      *
    FROM
      follow
    WHERE
      follower_id = #{followerId}
      AND followee_id = #{followeeId}
  </select>

  <select id="findFollowerIdsByFolloweeId" resultType="String">
    SELECT
      follower_id
    FROM
      follow
    WHERE
      followee_id = #{followeeId}
  </select>
</mapper>
