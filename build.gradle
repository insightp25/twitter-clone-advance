plugins {
	id 'java'

	id 'org.springframework.boot' version '3.1.0'

	id 'io.spring.dependency-management' version '1.1.0'

	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'clone'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

configurations {
	asciidoctorExt

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// dev
	// spring boot starter web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// aspectj
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'

	// mysql driver
	//runtimeOnly 'mysql:mysql-connector-java'
	implementation 'com.mysql:mysql-connector-j'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// spring hateoas
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'

	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Redis: 인메모리 데이터 저장소
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Jackson: 객체 직렬화 라이브러리
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.3'

	//Redis를 사용하는 Spring Session
	implementation 'org.springframework.session:spring-session-data-redis'

	//// h2 driver: 테스팅 시 임베디드 DB 모드용
	//implementation 'com.h2database:h2'

	//// JWT
	//compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'

	//runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'

	//runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	//// test
	// spring boot starter for test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// lombok for test
	testCompileOnly 'org.projectlombok:lombok'

	testAnnotationProcessor 'org.projectlombok:lombok'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
/*
// 테스트 v.3: api documentation 생성 일시중지
//
	outputs.dir snippetsDir
 */

	useJUnitPlatform()
}

/*
// 테스트 v.3: api documentation 생성 일시중지
//
asciidoctor {
	inputs.dir snippetsDir

	configurations 'asciidoctorExt'

	sourceDir file('src/docs/asciidoc')

	outputDir file('src/main/resources/static/docs')

	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

bootJar {
	dependsOn asciidoctor

	from('${asciidoctor.outputDir}/') {
		into 'static/docs'
	}
}
 */
